{"version":3,"sources":["core/message-generator/core/domain/message-type.type.ts","core/message-generator/core/domain/fizz-buzz.ts","core/message-generator/core/domain/fizz.ts","core/message-generator/core/domain/buzz.ts","core/message-generator/core/domain/happy.ts","core/message-generator/core/domain/default.ts","core/message-generator/core/domain/message-generator.factory.ts","core/message-generator/core/domain/RandomValueOutOfBound.ts","core/message-generator/core/use-case/generate-timed-message.ts","adapters/native-clock.ts","adapters/native-random-number-picker.ts","react-ui/configuration.ts","react-ui/hooks/useMessageGenerator.ts","react-ui/App.tsx","index.tsx","react-ui/assets/App.module.scss"],"names":["MessageType","FizzBuzz","FIZZBUZZ","time","getSeconds","Fizz","FIZZ","Buzz","BUZZ","Happy","randomNValue","this","isHappy","HAPPY","UNHAPPY","timeElement","DefaultMessageGenerator","toString","MessageGeneratorFactory","randomValue","strategies","messageGenerator","find","isValidRule","RandomValueOutOfBound","message","Error","GenerateTimedMessage","clock","randomNumberPicker","presenter","generateMessage","setMessage","setTime","getTime","generate","validateRandomValue","of","NativeClock","Date","NativeRandomNumberPicker","Math","ceil","random","Injector","MessageGeneratorContext","SimpleTimedMessagePresenter","App","useState","useEffect","timer","setInterval","generateTimedMessage","makeGenerateTimedMessageUseCase","execute","getMessage","clearInterval","useMessageGenerator","locale","className","style","outer","inner","value","Message","HHMMSSFormattedTime","hour","minute","second","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.470962fd.chunk.js","sourcesContent":["export enum MessageType {\r\n\tUNHAPPY = \"UnHappy\",\r\n\tHAPPY = 'Happy',\r\n\tFIZZ = 'Fizz',\r\n\tBUZZ = 'Buzz',\r\n\tFIZZBUZZ = 'Fizz Buzz'\r\n}","import {MessageGenerator} from \"./message-generator.contract\";\r\nimport {MessageType} from \"./message-type.type\";\r\n\r\nexport class FizzBuzz implements MessageGenerator {\r\n\t\r\n\tgenerate(): string {\r\n\t\treturn MessageType.FIZZBUZZ;\r\n\t}\r\n\t\r\n\tisValidRule(time: Date): boolean {\r\n\t\treturn time.getSeconds() % 15 === 0;\r\n\t}\r\n\t\r\n}","import {MessageGenerator} from \"./message-generator.contract\";\r\nimport {MessageType} from \"./message-type.type\";\r\n\r\nexport class Fizz implements MessageGenerator {\r\n\t\r\n\tgenerate(): string {\r\n\t\treturn MessageType.FIZZ;\r\n\t}\r\n\t\r\n\tisValidRule(time: Date): boolean {\r\n\t\treturn time.getSeconds() % 3 === 0;\r\n\t}\r\n\t\r\n}\r\n","import {MessageGenerator} from \"./message-generator.contract\";\r\nimport {MessageType} from \"./message-type.type\";\r\n\r\nexport class Buzz implements MessageGenerator {\r\n\t\r\n\tgenerate(): string {\r\n\t\treturn MessageType.BUZZ;\r\n\t}\r\n\t\r\n\tisValidRule(time: Date): boolean {\r\n\t\treturn time.getSeconds() % 5 === 0;\r\n\t}\r\n\t\r\n}","import {MessageGenerator} from \"./message-generator.contract\";\r\nimport {MessageType} from \"./message-type.type\";\r\n\r\nexport class Happy implements MessageGenerator {\r\n\t\r\n\tconstructor(private readonly randomNValue: number) {\r\n\t}\r\n\t\r\n\tgenerate(): string {\r\n\t\tif (this.isHappy())\r\n\t\t\treturn MessageType.HAPPY;\r\n\t\treturn MessageType.UNHAPPY;\r\n\t}\r\n\t\r\n\tisValidRule(time: Date): boolean {\r\n\t\tconst timeElement = time.getSeconds();\r\n\t\tif (timeElement !== 0)\r\n\t\t\treturn timeElement % 10 === 0;\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\tprivate isHappy() {\r\n\t\treturn this.randomNValue === 7;\r\n\t}\r\n\t\r\n}","import {MessageGenerator} from \"./message-generator.contract\";\r\n\r\nexport class DefaultMessageGenerator implements MessageGenerator {\r\n\tconstructor(private readonly time: Date) {\r\n\t}\r\n\t\r\n\tgenerate(): string {\r\n\t\treturn this.time.getSeconds().toString();\r\n\t}\r\n\t\r\n\tisValidRule(time: Date): boolean {\r\n\t\treturn true;\r\n\t}\r\n\t\r\n}","import {MessageGenerator} from \"./message-generator.contract\";\r\nimport {FizzBuzz} from \"./fizz-buzz\";\r\nimport {Fizz} from \"./fizz\";\r\nimport {Buzz} from \"./buzz\";\r\nimport {Happy} from \"./happy\";\r\nimport {DefaultMessageGenerator} from \"./default\";\r\n\r\nexport class MessageGeneratorFactory {\r\n\tprivate readonly strategies: MessageGenerator[];\r\n\t\r\n\tconstructor(private readonly randomValue: number) {\r\n\t\tthis.strategies = [new Happy(randomValue), new FizzBuzz(), new Fizz(), new Buzz()];\r\n\t}\r\n\t\r\n\tof(time: Date): MessageGenerator {\r\n\t\tconst messageGenerator = this.strategies.find(messageGenerator => messageGenerator.isValidRule(time));\r\n\t\tif (messageGenerator)\r\n\t\t\treturn messageGenerator;\r\n\t\treturn new DefaultMessageGenerator(time);\r\n\t}\r\n\t\r\n}","export class RandomValueOutOfBound extends Error {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.message = \"random value should be an integer in [1,10]\"\r\n\t}\r\n}","import {Clock} from \"../ports/clock\";\r\nimport {RandomNumberPicker} from \"../ports/random-number-picker\";\r\nimport {MessageGeneratorFactory} from \"../domain/message-generator.factory\";\r\nimport {RandomValueOutOfBound} from \"../domain/RandomValueOutOfBound\";\r\n\r\nexport class GenerateTimedMessage {\r\n\t\r\n\tconstructor(private readonly clock: Clock, private readonly randomNumberPicker: RandomNumberPicker) {}\r\n\t\r\n\texecute(presenter: TimedMessagePresenter) {\r\n\t\tconst message = this.generateMessage();\r\n\t\tpresenter.setMessage(message);\r\n\t\tpresenter.setTime(this.clock.getTime());\r\n\t}\r\n\t\r\n\tprivate generateMessage() {\r\n\t\tconst randomValue = this.randomNumberPicker.generate();\r\n\t\tthis.validateRandomValue(randomValue);\r\n\t\treturn new MessageGeneratorFactory(randomValue)\r\n\t\t\t.of(this.clock.getTime())\r\n\t\t\t.generate();\r\n\t}\r\n\t\r\n\tprivate validateRandomValue(randomValue: number) {\r\n\t\tif(randomValue<1||randomValue>10)\r\n\t\t\tthrow new RandomValueOutOfBound();\r\n\t}\r\n}\r\n\r\nexport interface TimedMessagePresenter {\r\n\tsetTime(time: Date): void;\r\n\tsetMessage(message: string): void;\r\n}","import {Clock} from \"../core/message-generator/core/ports/clock\";\r\n\r\nexport class NativeClock implements Clock {\r\n\t\r\n\tgetTime(): Date {\r\n\t\treturn new Date();\r\n\t}\r\n\t\r\n}","import {RandomNumberPicker} from \"../core/message-generator/core/ports/random-number-picker\";\r\n\r\nexport class NativeRandomNumberPicker implements RandomNumberPicker {\r\n\tgenerate(): number {\r\n\t\treturn Math.ceil(Math.random() * 9 + 1);\r\n\t}\r\n}","import {GenerateTimedMessage} from \"../core/message-generator/core/use-case/generate-timed-message\";\r\nimport {NativeClock} from \"../adapters/native-clock\";\r\nimport {NativeRandomNumberPicker} from \"../adapters/native-random-number-picker\";\r\n\r\nexport class Injector {\r\n\tstatic MessageGeneratorContext = class {\r\n\t\tstatic makeGenerateTimedMessageUseCase(): GenerateTimedMessage {\r\n\t\t\tconst clock = new NativeClock();\r\n\t\t\tconst randomNumberPicker = new NativeRandomNumberPicker();\r\n\t\t\treturn new GenerateTimedMessage(clock, randomNumberPicker);\r\n\t\t}\r\n\t}\r\n}","import {useEffect, useState} from \"react\";\r\nimport {TimedMessagePresenter} from \"../../core/message-generator/core/use-case/generate-timed-message\";\r\nimport {Injector} from \"../configuration\";\r\n\r\nconst INIT_MESSAGE = 'CONFIGURING...';\r\n\r\nexport function useMessageGenerator(): { message: string; time: Date } {\r\n\tconst [time, setTime] = useState<Date>(new Date());\r\n\tconst [message, setMessage] = useState<string>(INIT_MESSAGE);\r\n\t\r\n\tuseEffect(() => {\r\n\t\tconst timer = setInterval(() => {\r\n\t\t\tconst generateTimedMessage = Injector.MessageGeneratorContext.makeGenerateTimedMessageUseCase()\r\n\t\t\tconst presenter = new SimpleTimedMessagePresenter();\r\n\t\t\tgenerateTimedMessage.execute(presenter);\r\n\t\t\tsetTime(presenter.getTime());\r\n\t\t\tsetMessage(presenter.getMessage());\r\n\t\t}, 1000);\r\n\t\treturn () => clearInterval(timer);\r\n\t}, []);\r\n\t\r\n\treturn {\r\n\t\tmessage: message,\r\n\t\ttime: time\r\n\t};\r\n}\r\n\r\nclass SimpleTimedMessagePresenter implements TimedMessagePresenter {\r\n\tprivate message: string = '';\r\n\tprivate time: Date = new Date(2020, 3, 26, 0, 0, 0);\r\n\t\r\n\tsetMessage(message: string): void {\r\n\t\tthis.message = message;\r\n\t}\r\n\t\r\n\tsetTime(time: Date): void {\r\n\t\tthis.time = time;\r\n\t}\r\n\t\r\n\tgetMessage() {\r\n\t\treturn this.message;\r\n\t}\r\n\t\r\n\tgetTime() {\r\n\t\treturn this.time;\r\n\t}\r\n}","import React, {FunctionComponent, ReactElement} from 'react';\nimport style from './assets/App.module.scss';\nimport {FormattedTime, IntlProvider} from \"react-intl\";\nimport {useMessageGenerator} from \"./hooks/useMessageGenerator\";\n\nfunction App() {\n    const {message, time} = useMessageGenerator();\n    return (\n        <IntlProvider locale=\"en\">\n            <div className={style.outer}>\n                <div className={style.time}>\n                    <HHMMSSFormattedTime time={time}/>\n                </div>\n                <div className={style.inner}>\n                    <div className={style.message}>\n                        <Message value={message}/>\n                    </div>\n                </div>\n            </div>\n        </IntlProvider>\n    );\n}\n\nexport default App;\n\nconst Message: FunctionComponent<{ value: string }> = ({value}): ReactElement => {\n    return <p>{value}</p>;\n};\n\nconst HHMMSSFormattedTime: FunctionComponent<{ time: Date }> = ({time}): ReactElement => {\n    return <FormattedTime value={time} hour=\"numeric\" minute=\"numeric\" second=\"numeric\"/>;\n};\n\n\n\n\n\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './react-ui/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"outer\":\"App_outer__1dQWZ\",\"inner\":\"App_inner__1KuFK\",\"time\":\"App_time__1up8z\",\"message\":\"App_message__2jRpI\",\"shadowFade\":\"App_shadowFade__3ku4J\"};"],"sourceRoot":""}